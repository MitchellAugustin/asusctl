method return time=1687857321.234264 sender=:1.373 -> destination=:1.433 serial=2258 reply_serial=2
   string "
<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
 "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node>
  <interface name="org.freedesktop.DBus.Introspectable">
    <method name="Introspect">
      <arg type="s" direction="out"/>
    </method>
  </interface>
  <interface name="org.freedesktop.DBus.Properties">
    <method name="Get">
      <arg name="interface_name" type="s" direction="in"/>
      <arg name="property_name" type="s" direction="in"/>
      <arg type="v" direction="out"/>
    </method>
    <method name="Set">
      <arg name="interface_name" type="s" direction="in"/>
      <arg name="property_name" type="s" direction="in"/>
      <arg name="value" type="v" direction="in"/>
    </method>
    <method name="GetAll">
      <arg name="interface_name" type="s" direction="in"/>
      <arg type="a{sv}" direction="out"/>
    </method>
    <!--
     Emits the `org.freedesktop.DBus.Properties.PropertiesChanged` signal.
     -->
    <signal name="PropertiesChanged">
      <arg name="interface_name" type="s"/>
      <arg name="changed_properties" type="a{sv}"/>
      <arg name="invalidated_properties" type="as"/>
    </signal>
  </interface>
  <interface name="org.freedesktop.DBus.Peer">
    <method name="Ping">
    </method>
    <method name="GetMachineId">
      <arg type="s" direction="out"/>
    </method>
  </interface>
  <interface name="org.asuslinux.Daemon">
    <!--
     Set the keyboard brightness level (0-3)
     -->
    <method name="SetBrightness">
      <arg name="brightness" type="s" direction="in"/>
    </method>
    <!--
     Set a variety of states, input is array of enum.
     `enabled` sets if the sent array should be disabled or enabled

     ```text
     pub struct AuraPowerDev {
         tuf: Vec<AuraDevTuf>,
         x1866: Vec<AuraDevRog1>,
         x19b6: Vec<AuraDevRog2>,
     }
     pub enum AuraDevTuf {
         Boot,
         Awake,
         Sleep,
         Keyboard,
     }
     pub enum AuraDevRog1 {
         Awake = 0x000002,
         Keyboard = 0x080000,
         Lightbar = 0x040500,
         Boot = 0xc31209,
         Sleep = 0x300804,
     }
     pub enum AuraDevRog2 {
         BootLogo = 1,
         BootKeyb = 1 << 1,
         AwakeLogo = 1 << 2,
         AwakeKeyb = 1 << 3,
         SleepLogo = 1 << 4,
         SleepKeyb = 1 << 5,
         ShutdownLogo = 1 << 6,
         ShutdownKeyb = 1 << 7,
         BootBar = 1 << (7 + 2),
         AwakeBar = 1 << (7 + 3),
         SleepBar = 1 << (7 + 4),
         ShutdownBar = 1 << (7 + 5),
         BootLid = 1 << (15 + 1),
         AwakeLid = 1 << (15 + 2),
         SleepLid = 1 << (15 + 3),
         ShutdownLid = 1 << (15 + 4),
         BootRearGlow = 1 << (23 + 1),
         AwakeRearGlow = 1 << (23 + 2),
         SleepRearGlow = 1 << (23 + 3),
         ShutdownRearGlow = 1 << (23 + 4),
     }
     ```
     -->
    <method name="SetLedsPower">
      <arg name="options" type="(asasas)" direction="in"/>
      <arg name="enabled" type="b" direction="in"/>
    </method>
    <method name="SetLedMode">
      <arg name="effect" type="(ss(yyy)(yyy)ss)" direction="in"/>
    </method>
    <method name="NextLedMode">
    </method>
    <method name="PrevLedMode">
    </method>
    <method name="NextLedBrightness">
    </method>
    <method name="PrevLedBrightness">
    </method>
    <method name="LedsEnabled">
      <arg type="(asasas)" direction="out"/>
    </method>
    <!--
     Return the current mode data
     -->
    <method name="LedMode">
      <arg type="s" direction="out"/>
    </method>
    <!--
     Return a list of available modes
     -->
    <method name="LedModes">
      <arg type="a{s(ss(yyy)(yyy)ss)}" direction="out"/>
    </method>
    <!--
     On machine that have some form of either per-key keyboard or per-zone
     this can be used to write custom effects over dbus. The input is a
     nested `Vec<Vec<8>>` where `Vec<u8>` is a raw USB packet
     -->
    <method name="DirectAddressingRaw">
      <arg name="data" type="aay" direction="in"/>
    </method>
    <signal name="NotifyLed">
      <arg name="data" type="(ss(yyy)(yyy)ss)"/>
    </signal>
    <signal name="NotifyPowerStates">
      <arg name="data" type="(asasas)"/>
    </signal>
    <!--
     Return the current LED brightness
     -->
    <property name="LedBrightness" type="n" access="read"/>
  </interface>
</node>
"
