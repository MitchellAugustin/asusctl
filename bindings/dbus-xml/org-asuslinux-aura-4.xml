<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN" "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node>
  <interface name="org.asuslinux.Daemon">
    <!--
     Set the keyboard brightness level (0-3)
     -->
    <method name="SetBrightness">
      <arg name="brightness" type="s" direction="in"/>
    </method>
    <!--
     Set a variety of states, input is array of enum.
     `enabled` sets if the sent array should be disabled or enabled

     For Modern ROG devices the "enabled" flag is ignored.
     -->
    <method name="SetLedPower">
      <arg name="options" type="(asas((sbbbb)(sbbbb)(sbbbb)(sbbbb)(sbbbb)))" direction="in"/>
      <arg name="enabled" type="b" direction="in"/>
    </method>
    <method name="SetLedMode">
      <arg name="effect" type="(ss(yyy)(yyy)ss)" direction="in"/>
    </method>
    <method name="NextLedMode">
    </method>
    <method name="PrevLedMode">
    </method>
    <method name="NextLedBrightness">
    </method>
    <method name="PrevLedBrightness">
    </method>
    <!--
     Return the device type for this Aura keyboard
     -->
    <method name="DeviceType">
      <arg type="s" direction="out"/>
    </method>
    <method name="LedPower">
      <arg type="(asas((sbbbb)(sbbbb)(sbbbb)(sbbbb)(sbbbb)))" direction="out"/>
    </method>
    <!--
     Return the current mode data
     -->
    <method name="LedMode">
      <arg type="s" direction="out"/>
    </method>
    <!--
     Return a list of available modes
     -->
    <method name="LedModes">
      <arg type="a{s(ss(yyy)(yyy)ss)}" direction="out"/>
    </method>
    <!--
     On machine that have some form of either per-key keyboard or per-zone
     this can be used to write custom effects over dbus. The input is a
     nested `Vec<Vec<8>>` where `Vec<u8>` is a raw USB packet
     -->
    <method name="DirectAddressingRaw">
      <arg name="data" type="aay" direction="in"/>
    </method>
    <signal name="NotifyLed">
      <arg name="data" type="(ss(yyy)(yyy)ss)"/>
    </signal>
    <signal name="NotifyPowerStates">
      <arg name="data" type="(asas((sbbbb)(sbbbb)(sbbbb)(sbbbb)(sbbbb)))"/>
    </signal>
    <!--
     Return the current LED brightness
     -->
    <property name="LedBrightness" type="n" access="read"/>
  </interface>
</node>
