
<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
 "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node>
  <interface name="org.asuslinux.Aura">
    <!--
     Get the data set for every mode available
     -->
    <method name="AllModeData">
      <arg type="a{u(uu(yyy)(yyy)ss)}" direction="out"/>
    </method>
    <!--
     On machine that have some form of either per-key keyboard or per-zone
     this can be used to write custom effects over dbus. The input is a
     nested `Vec<Vec<8>>` where `Vec<u8>` is a raw USB packet
     -->
    <method name="DirectAddressingRaw">
      <arg name="data" type="aay" direction="in"/>
    </method>
    <!--
     Return the current LED brightness
     -->
    <!--
     Set the keyboard brightness level (0-3)
     -->
    <property name="Brightness" type="u" access="readwrite"/>
    <!--
     Return the device type for this Aura keyboard
     -->
    <property name="DeviceType" type="s" access="read"/>
    <!--
     The current mode data
     -->
    <!--
     Set an Aura effect if the effect mode or zone is supported.

     On success the aura config file is read to refresh cached values, then
     the effect is stored and config written to disk.
     -->
    <property name="LedMode" type="u" access="readwrite"/>
    <!--
     The current mode data
     -->
    <!--
     Set an Aura effect if the effect mode or zone is supported.

     On success the aura config file is read to refresh cached values, then
     the effect is stored and config written to disk.
     -->
    <property name="LedModeData" type="(uu(yyy)(yyy)ss)" access="readwrite"/>
    <!--
     Set a variety of states, input is array of enum.
     `enabled` sets if the sent array should be disabled or enabled

     For Modern ROG devices the "enabled" flag is ignored.
     -->
    <property name="LedPower" type="(auau((ubbbb)(ubbbb)(ubbbb)(ubbbb)(ubbbb)))" access="readwrite"/>
    <!--
     The total available modes
     -->
    <property name="SupportedBasicModes" type="au" access="read"/>
    <property name="SupportedBasicZones" type="au" access="read"/>
    <!--
     Total levels of brightness available
     -->
    <property name="SupportedBrightness" type="au" access="read"/>
    <property name="SupportedPowerZones" type="au" access="read"/>
  </interface>
  <interface name="org.freedesktop.DBus.Introspectable">
    <method name="Introspect">
      <arg type="s" direction="out"/>
    </method>
  </interface>
  <interface name="org.freedesktop.DBus.Properties">
    <method name="Get">
      <arg name="interface_name" type="s" direction="in"/>
      <arg name="property_name" type="s" direction="in"/>
      <arg type="v" direction="out"/>
    </method>
    <method name="Set">
      <arg name="interface_name" type="s" direction="in"/>
      <arg name="property_name" type="s" direction="in"/>
      <arg name="value" type="v" direction="in"/>
    </method>
    <method name="GetAll">
      <arg name="interface_name" type="s" direction="in"/>
      <arg type="a{sv}" direction="out"/>
    </method>
    <!--
     Emits the `org.freedesktop.DBus.Properties.PropertiesChanged` signal.
     -->
    <signal name="PropertiesChanged">
      <arg name="interface_name" type="s"/>
      <arg name="changed_properties" type="a{sv}"/>
      <arg name="invalidated_properties" type="as"/>
    </signal>
  </interface>
  <interface name="org.freedesktop.DBus.Peer">
    <method name="Ping">
    </method>
    <method name="GetMachineId">
      <arg type="s" direction="out"/>
    </method>
  </interface>
</node>
